# Lightweight CPU-only Lambda Container
FROM public.ecr.aws/lambda/python:3.9

# Install minimal system dependencies for CPU processing
RUN yum update -y && \
    yum install -y \
    gcc \
    gcc-c++ \
    make \
    cmake \
    && yum clean all && \
    rm -rf /var/cache/yum

# Copy and install Python dependencies (CPU versions)
COPY requirements-cpu.txt ${LAMBDA_TASK_ROOT}/
RUN pip install --no-cache-dir -r requirements-cpu.txt

# Copy function code
COPY lambda_handler.py ${LAMBDA_TASK_ROOT}/

# Create model cache script
RUN echo 'import os' > /tmp/cache_models.py && \
    echo 'os.makedirs("/tmp/insightface_models", exist_ok=True)' >> /tmp/cache_models.py && \
    echo 'from insightface.app import FaceAnalysis' >> /tmp/cache_models.py && \
    echo 'print("Downloading InsightFace models...")' >> /tmp/cache_models.py && \
    echo 'app = FaceAnalysis(name="antelopev2", providers=["CPUExecutionProvider"])' >> /tmp/cache_models.py && \
    echo 'app.prepare(ctx_id=-1, det_thresh=0.5, det_size=(640, 640))' >> /tmp/cache_models.py && \
    echo 'print("✅ InsightFace models cached for CPU processing")' >> /tmp/cache_models.py

# Pre-download and cache InsightFace models for faster cold starts
RUN python /tmp/cache_models.py || echo "⚠️ Model caching failed, will download at runtime"

# Set function handler
CMD ["lambda_handler.lambda_handler"] 